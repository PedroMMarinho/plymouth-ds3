# === Background ===
Window.SetBackgroundTopColor(0.0, 0.0, 0.0);
Window.SetBackgroundBottomColor(0.0, 0.0, 0.0);

ref_width = 1920.0;
ref_height = 1080.0;

# === MAIN BOX ===
main_box.image = Image("main_box.png");
main_box.sprite = Sprite(main_box.image);
main_box.pos = [418, 161];
main_box.sprite.SetPosition(main_box.pos[0], main_box.pos[1], 1);
main_box.sprite.SetOpacity(1);

# === LOGO ===
ds_logo.image = Image("darksouls3_logo.png");
ds_logo.sprite = Sprite(ds_logo.image);
ds_logo.pos = [191, 956];
ds_logo.sprite.SetPosition(ds_logo.pos[0], ds_logo.pos[1], 2);
ds_logo.sprite.SetOpacity(1);

# === LOADING ANIMATION FROM SPRITESHEET ===
animation_first_frame = 0;
animation_last_frame = 31; 
animation_current_frame = 0;
# Change to make the animation faster/slower
animation_frame_delay = 2;  
progress = 0;

# Load and store all cropped frame images
for (frame = animation_first_frame; frame <= animation_last_frame; frame++) {
    animation_images[frame] = Image("bonefire_ani/loading_icon-" + frame + ".png");
}

# Create a sprite and position it at (188, 848)
animation_sprite = Sprite();
animation_sprite.SetX(188);
animation_sprite.SetY(848);
animation_sprite.SetZ(2);


# Set the animation refresh function
fun on_refresh() {
    progress += 1;

    # Only update image every animation_frame_delay frames
    if (progress % animation_frame_delay == 0) {
        animation_current_frame += 1;
        if (animation_current_frame > animation_last_frame) {
            animation_current_frame = animation_first_frame;
        }
        animation_sprite.SetImage(animation_images[animation_current_frame]);
    }
}

Plymouth.SetRefreshFunction(on_refresh);

# === ITEM IMAGE ===
item_image = Image("sprites/sage_ring.png");

item_scaled_width = Math.Int(item_image.GetWidth() * 0.6);
item_scaled_height = Math.Int(item_image.GetHeight() * 0.6);
item_scaled_image = item_image.Scale(item_scaled_width, item_scaled_height);


item_sprite = Sprite(item_scaled_image);
item_sprite.SetPosition(570, 249, 2);
item_sprite.SetOpacity(1);

fun create_text_color(text, x, y, r, g, b, font) {
    t.image = Image.Text(text, r, g, b, 1, font);
    s.image = Image.Text(text, r/4, g/4, b/4, 1, font);

    t.sprite = Sprite(t.image);
    s.sprite = Sprite(s.image);
    t.sprite.SetPosition(x, y, 3);
    s.sprite.SetPosition(x + 1, y + 1, 2);

    t.sprite.SetOpacity(1);
    s.sprite.SetOpacity(1);
	
    # To be removed
    #debugText = "height" + t.image.GetHeight() + " and width " + t.image.GetWidth() ;
    #rigga = Image.Text(debugText , 0.86,0.72,0.25,1,font);
    #rigga.sprite = Sprite(rigga);
    #rigga.sprite.SetPosition(200,200,100);

    return [t, s, text];
}

# === Define fonts ===
font_title = "FOT-Matisse Pro 22";                              
font_description = "FOT-Matisse Pro 16";                              

# === Create Title Text ===
title_text = "Sage Ring\n";

# === Create Description Text ===
description_text = ["A ring given to Farron's Undead Legion by one of the preacher twins, known more commonly as the Crystal Sages.", "", "Shortens spell casting time.", "", "The sorcerers of Farron's Abyss Watchers were known to be lonesome warriors who would only rely upon more pragmatic spells."];

# === Create text elements ===
item_title = create_text_color(title_text, 672, 309, 165/255.0, 144/255.0, 103/255.0, font_title);
#item_description = create_text_color(description_text, 672, 373, 208/255.0, 208/255.0, 208/255.0, font_description);


# === Constants ===
max_width = 799;
start_x = 672;
start_y = 373;
line_spacing = 28;

fun SplitString(str, delimiter) {
    result = [];
    current_word = "";
    result_idx = 0;

    for (i = 0; i < str.Length(); i += 1) {
        c = str.CharAt(i);

        if (c == delimiter.CharAt(0)) {

             if (current_word != "") {
                result[result_idx] = current_word;
                current_word = "";
                result_idx+=1;   
             }

        } else {
               current_word += c;
        }
    }

    if (current_word != "") {
        result[result_idx] = current_word;
    }

    return result;
}


